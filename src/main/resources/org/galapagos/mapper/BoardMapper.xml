<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.galapagos.mapper.BoardMapper">
	<sql id="criteria">
		<trim prefixOverrides="OR">
			<foreach item="type" collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like CONCAT('%', #{keyword}, '%')
						</when>
						<when test="type == 'C'.toString()">
							content like CONCAT('%', #{keyword}, '%')
						</when>
						<when test="type == 'N'.toString()">
							nickname like CONCAT('%', #{keyword}, '%')
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

<resultMap id="IssueMap" type="BoardVO">
    <result property="bno" column="bno"/>
    <result property="categoryId" column="category_id"/>
	<result property="username" column="username"/>
	<result property="content" column="content"/>
	<result property="nickname" column="nickname"/>
	<result property="registerDate" column="register_date"/>
	<result property="updateDate" column="update_date"/>
	<result property="hit" column="hit"/>
	<result property="likes" column="likes"/>
</resultMap>


	<select id="getBoardTotalCount" resultType="int">
		select count(*) from view_post
		<where>
			<include refid="criteria"></include>
		</where>
		where category_id = 3
		order by bno desc
	</select>


	<select id="getBoardList" resultType="BoardVO">
		select vp.*, ac.category_id
		from view_post vp
		join argument_category ac on vp. category_id = ac.category_id	
		where vp.category_id = 3
		order by vp.bno desc
	</select>

	<select id="getListWithPaging" resultType="BoardVO">
		select * from argument_post
		<where>
			<include refid="criteria"></include>
		</where>
		order by bno desc
		limit #{offset}, #{amount}
	</select>

	<insert id="insert">
		insert into argument_post (category_id, title, content, nickname)
		values (3, #{title}, #{content}, #{nickname})
	</insert>

	<insert id="insertSelectKey">
		insert into argument_post (category_id, title, content, nickname)
		values (3, #{title},#{content}, #{nickname})

		<selectKey resultType="Long" keyProperty="bno"
			keyColumn="bno" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<select id="read" resultType="BoardVO">
		select * from view_post 
		where bno = #{bno}
	</select>

	<delete id="delete">
		delete from argument_post
		where bno = #{bno}
	</delete>

	<update id="update">
		update argument_post set
			title = #{title},
			content = #{content},
			nickname = #{nickname},
			update_date = now()
		where bno = #{bno}
	</update>
	
	<insert id="insertAttachment">
		insert into argument_post_attachment(filename, path, content_type, size, bno)
		values(#{filename}, #{path}, #{contentType}, #{size}, #{bno})
	</insert>
	
	<select id="getAttachmentList" resultType="BoardAttachmentVO">
		select * from argument_post_attachment
		where bno = #{bno}
		order by filename
	</select>
	
	<select id="getAttachment" resultType="BoardAttachmentVO">
		select * from argument_post_attachment
		where no = #{no}
	</select>
	
	<delete id="removeAttachment">
		delete from argument_post_attachment
		where no = #{no}
	</delete>

	<update id="plusHit" parameterType="long">
		update argument_post set
		hit = hit + 1
		where bno = #{bno}
	</update>
	
	<select id="getLikesList" resultType="long">
		select bno from argument_post_likes
		where username = #{username}
	</select>
	
	<insert id="addLike">
		insert into argument_post_likes(bno, username)
		values (#{bno}, #{username})
	</insert>
	
	<delete id="deleteLike">
		delete from argument_post_likes
		where bno = #{bno} and username = #{username} 
	</delete>

</mapper>
